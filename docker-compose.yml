version: '3.8'

services:
  postgres:
    image: postgres:15-alpine
    container_name: whisper-postgres
    environment:
      POSTGRES_DB: whisper_db
      POSTGRES_USER: whisper_user
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      PGDATA: /var/lib/postgresql/data/pgdata
    volumes:
      - postgres-data:/var/lib/postgresql/data
      - ./scripts/init.sql:/docker-entrypoint-initdb.d/init.sql
      - ./scripts/init-n8n.sql:/docker-entrypoint-initdb.d/init-n8n.sql
    ports:
      - "5432:5432"
    networks:
      - whisper-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U whisper_user -d whisper_db || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s

  pgadmin:
    image: dpage/pgadmin4:8
    container_name: whisper-pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@example.com
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD}
    volumes:
      - pgadmin-data:/var/lib/pgadmin
    networks:
      - whisper-network
    restart: unless-stopped
    ports:
      - "8081:80"
    depends_on:
      - postgres

  db-loader:
    build:
      context: .
      dockerfile: Dockerfile.db-loader
    container_name: whisper-db-loader
    volumes:
      - whisper-out:/data:rw
      - ./scripts:/app
    networks:
      - whisper-network
    restart: unless-stopped
    working_dir: /app
    command: python -u db_loader.py
    depends_on:
      - postgres
    environment:
      DB_HOST: postgres
      DB_NAME: whisper_db
      DB_USER: whisper_user
      DB_PASSWORD: ${POSTGRES_PASSWORD}



volumes:
  postgres-data:
  pgadmin-data:
  whisper-out:
    external: true

networks:
  whisper-network:
    driver: bridge
